https://git.gnome.org/browse/totem-pl-parser/commit/?id=08f6a2f

--- origsrc/xplayer-plparser-1.0.2/configure.ac	2016-04-27 09:24:56.000000000 -0500
+++ src/xplayer-plparser-1.0.2/configure.ac	2018-02-19 14:59:07.623254900 -0600
@@ -81,8 +81,8 @@ AC_ARG_ENABLE(gmime-i-know-what-im-doing
 
 if test "x$enable_gmime" = "xyes" ; then
    PKG_CHECK_MODULES(GMIME,  
-		       gmime-2.6,
-		       [have_gmime=yes GMIME=gmime-2.6], 
+		       gmime-3.0,
+		       [have_gmime=yes GMIME=gmime-3.0], 
 		       [have_gmime=no])
 
    if test "x$have_gmime" = "xyes" ; then
--- origsrc/xplayer-plparser-1.0.2/plparse/xplayer-pl-parser.c	2016-04-27 09:24:56.000000000 -0500
+++ src/xplayer-plparser-1.0.2/plparse/xplayer-pl-parser.c	2018-02-19 15:04:18.814020700 -0600
@@ -2337,7 +2337,15 @@ xplayer_pl_parser_parse_date (const char
 	}
 	D(g_message ("Failed to parse duration '%s' using the ISO8601 parser", date_str));
 	/* Fall back to RFC 2822 date parsing */
-	return g_mime_utils_header_decode_date (date_str, NULL);
+	{
+		g_autoptr(GDateTime) date = NULL;
+		date = g_mime_utils_header_decode_date (date_str);
+		if (!date || !g_date_time_to_timeval (date, &val)) {
+			D(g_message ("Failed to parse duration '%s' using the RFC 2822 parser", date_str));
+			return -1;
+		}
+		return val.tv_sec;
+	}
 #else
 	WARN_NO_GMIME;
 #endif /* HAVE_GMIME */
